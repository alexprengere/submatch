{"name":"Submatch","tagline":"Match movies and subtitles from their names","body":"submatch\r\n========\r\n\r\nThis is a Python utility to match movies and subtitles inside a\r\ndirectory, based on their names. It is specially useful for series with\r\nlots of subtitles.\r\n\r\nThe output is a shell script containing the right `mv` commands.\r\n\r\nInstallation\r\n------------\r\n\r\n~~~~ {.sourceCode .bash}\r\n$ python setup.py install --user\r\n~~~~\r\n\r\nUsage\r\n-----\r\n\r\n~~~~ {.sourceCode .bash}\r\n$ submatch -h\r\nusage: sub_match.py [-h] [-l LIMIT] [-r] [-n]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -l LIMIT, --limit LIMIT\r\n                        Change lower bound for matching ratio. Default is 0.6.\r\n                        Matches below that percentage are automatically\r\n                        excluded.\r\n  -r, --reverse         Reverse the logic of renaming. With this option,\r\n                        subtitles are renamed, not movies.\r\n  -n, --no-ext          Consider files with no extension as movies.\r\n~~~~\r\n\r\nExample\r\n-------\r\n\r\nSuppose you have some movies and subtitles:\r\n\r\n~~~~ {.sourceCode .bash}\r\n$ touch tata.avi titi.sub toto.avi toto.srt TUTU.AVI tutu.fr.srt\r\n~~~~\r\n\r\nAfter installation, just run the tool in the folder:\r\n\r\n~~~~ {.sourceCode .bash}\r\n$ submatch\r\n#!/bin/bash\r\n\r\n# * Mapping:\r\n# 100%  toto.avi    ->  toto.srt\r\n# 73%   TUTU.AVI    ->  tutu.fr.srt\r\n# * Remaining subs  : titi.sub\r\n# * Remaining movies: tata.avi\r\n\r\n# toto.avi has the right name ;)\r\nmv TUTU.AVI tutu.fr.AVI\r\n~~~~\r\n\r\nYou can then actually perform the move like this:\r\n\r\n~~~~ {.sourceCode .bash}\r\n$ submatch | sh\r\n~~~~","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}